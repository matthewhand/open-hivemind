name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  integration-api:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Slightly longer for API tests
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run API integration tests
        run: |
          NODE_CONFIG_DIR=config/test NODE_ENV=test node -r dotenv/config node_modules/.bin/jest \
            tests/api/ \
            tests/routes/ \
            tests/integration/routes/ \
            --testTimeout=15000 \
            --verbose \
            --ci \
            --maxWorkers=2

  integration-monitoring:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run monitoring integration tests
        run: |
          NODE_CONFIG_DIR=config/test NODE_ENV=test node -r dotenv/config node_modules/.bin/jest \
            tests/integration/MonitoringPipeline.test.ts \
            --testTimeout=30000 \
            --verbose \
            --ci \
            --maxWorkers=1 \
            --runInBand

  integration-webhook:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run webhook integration tests
        run: |
          NODE_CONFIG_DIR=config/test NODE_ENV=test node -r dotenv/config node_modules/.bin/jest \
            tests/webhook/ \
            tests/integration/auth/ \
            --testTimeout=15000 \
            --verbose \
            --ci \
            --maxWorkers=2