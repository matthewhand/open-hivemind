name: Visual Regression Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'webui/client/**'
      - '.github/workflows/visual-regression.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'webui/client/**'
      - '.github/workflows/visual-regression.yml'
  schedule:
    # Run daily at 2 AM UTC to catch any visual regressions
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      update_snapshots:
        description: 'Update visual snapshots'
        required: false
        default: 'false'
        type: boolean
      test_browsers:
        description: 'Select browsers to test'
        required: true
        default: 'chromium,firefox,webkit'
        type: choice
        options:
          - 'chromium,firefox,webkit'
          - 'chromium,firefox'
          - 'chromium'
          - 'all'

jobs:
  visual-regression:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        include:
          - browser: chromium
            browser-name: Chrome
          - browser: firefox
            browser-name: Firefox
          - browser: webkit
            browser-name: Safari

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: webui/client/package-lock.json

    - name: Install dependencies
      run: |
        cd webui/client
        npm ci

    - name: Install Playwright Browsers
      run: |
        cd webui/client
        npx playwright install ${{ matrix.browser }}
        npx playwright install-deps

    - name: Build application
      run: |
        cd webui/client
        npm run build

    - name: Start application
      run: |
        cd webui/client
        npm run preview &
        sleep 10

    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:4173; do sleep 2; done'

    - name: Run visual regression tests
      run: |
        cd webui/client
        if [ "${{ github.event.inputs.update_snapshots }}" = "true" ]; then
          npx playwright test --project=${{ matrix.browser }} --update-snapshots
        else
          npx playwright test --project=${{ matrix.browser }}
        fi
      env:
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-test-results-${{ matrix.browser }}
        path: |
          webui/client/test-results/
          webui/client/playwright-report/
        retention-days: 30

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failure-screenshots-${{ matrix.browser }}
        path: |
          webui/client/tests/visual/screenshots/current/
          webui/client/tests/visual/screenshots/diff/
        retention-days: 30

    - name: Generate visual diff report
      if: failure()
      run: |
        cd webui/client
        npx playwright show-report > visual-report-summary.txt 2>&1 || true
        echo "## Visual Regression Test Results" > $GITHUB_STEP_SUMMARY
        echo "### Browser: ${{ matrix.browser-name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f "visual-report-summary.txt" ]; then
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat visual-report-summary.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi

  visual-regression-summary:
    runs-on: ubuntu-latest
    needs: visual-regression
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Generate summary report
      run: |
        echo "# Visual Regression Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Results by Browser" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        for browser in chromium firefox webkit; do
          if [ -d "artifacts/visual-test-results-$browser" ]; then
            echo "### $browser" >> $GITHUB_STEP_SUMMARY
            if [ -f "artifacts/visual-test-results-$browser/test-results.json" ]; then
              echo "✅ Tests completed" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ Tests failed or incomplete" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        echo "## Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- Test results and screenshots are available in the artifacts section" >> $GITHUB_STEP_SUMMARY
        echo "- Download individual browser results for detailed analysis" >> $GITHUB_STEP_SUMMARY

  update-baseline:
    runs-on: ubuntu-latest
    needs: visual-regression
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.update_snapshots == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: webui/client/package-lock.json

    - name: Install dependencies
      run: |
        cd webui/client
        npm ci

    - name: Install Playwright Browsers
      run: |
        cd webui/client
        npx playwright install chromium

    - name: Update baseline screenshots
      run: |
        cd webui/client
        npm run build
        npm run preview &
        sleep 10
        timeout 60 bash -c 'until curl -f http://localhost:4173; do sleep 2; done'
        npx playwright test --project=chromium --update-snapshots

    - name: Commit updated baseline
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add webui/client/tests/visual/screenshots/baseline/
        git diff --staged --quiet || git commit -m "Update visual baseline screenshots [skip ci]"
        git push

  notify-slack:
    runs-on: ubuntu-latest
    needs: visual-regression
    if: failure() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify Slack on failure
      if: env.SLACK_WEBHOOK_URL != ''
      run: |
        curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"🚨 Visual regression tests failed on main branch. Check the GitHub Actions for details."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}