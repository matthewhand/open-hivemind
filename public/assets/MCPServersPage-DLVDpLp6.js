import{o as y,f as v,r as l,j as e,B as n,T as a,z as L,b as g,F as B,C as G,a as R,t as z,I as m,K as W,N as Z,O as q,Q as H}from"./index-RnQI40tk.js";import{A as O}from"./Add-DryMe5yZ.js";import{G as S}from"./Grid-CKtzxHFY.js";import{C as U}from"./CardActions-DOPvuYvz.js";import{R as $}from"./PlayArrow-C7tgBOyR.js";import{D as N}from"./Delete-BgqdZpMV.js";import{T as j}from"./TextField-DC-0rrgg.js";import"./react-Dqn7FESC.js";import"./redux-CHunf9nH.js";import"./charts-BQCo6uAH.js";import"./router-muBVCOlq.js";import"./Select-iYrgATPy.js";import"./useSlotProps-CNI6Fs2q.js";import"./useControlled-BELcKehV.js";const K=y(v.jsx("path",{d:"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z"})),Q=y(v.jsx("path",{d:"M6 6h12v12H6z"})),ce=()=>{const[b,i]=l.useState([]),[A,D]=l.useState(!0),[o,c]=l.useState(null),[I,d]=l.useState(!1),[p,f]=l.useState(!1),[x,r]=l.useState(null),w=[{label:"MCP",href:"/uber/mcp"},{label:"Servers",href:"/uber/mcp/servers",isActive:!0}],T=[{id:"1",name:"GitHub Integration",url:"mcp://github-server:8080",status:"running",description:"GitHub repository management and issue tracking",toolCount:12,lastConnected:"2024-01-15T10:30:00Z"},{id:"2",name:"Database Tools",url:"mcp://db-server:3306",status:"running",description:"Database query and management tools",toolCount:8,lastConnected:"2024-01-15T09:15:00Z"},{id:"3",name:"File System",url:"mcp://fs-server:9000",status:"stopped",description:"File system operations and management",toolCount:15,lastConnected:"2024-01-14T16:45:00Z"},{id:"4",name:"API Gateway",url:"mcp://api-gateway:8443",status:"error",description:"External API integrations and webhooks",toolCount:6,lastConnected:"2024-01-13T14:20:00Z"}];l.useEffect(()=>{setTimeout(()=>{i(T),D(!1)},1e3)},[]);const E=t=>{switch(t){case"running":return"success";case"stopped":return"default";case"error":return"error";default:return"default"}},C=async(t,s)=>{try{r({type:"success",message:`Server ${s} action completed`}),i(u=>u.map(h=>h.id===t?{...h,status:s==="start"?"running":"stopped"}:h))}catch{r({type:"error",message:`Failed to ${s} server`})}},M=()=>{c({id:"",name:"",url:"",status:"stopped",description:"",toolCount:0}),f(!1),d(!0)},k=t=>{c(t),f(!0),d(!0)},P=async()=>{if(o)try{if(p)i(t=>t.map(s=>s.id===o.id?o:s)),r({type:"success",message:"Server updated successfully"});else{const t={...o,id:Date.now().toString()};i(s=>[...s,t]),r({type:"success",message:"Server added successfully"})}d(!1)}catch{r({type:"error",message:"Failed to save server"})}},F=async t=>{if(window.confirm("Are you sure you want to delete this server?"))try{i(s=>s.filter(u=>u.id!==t)),r({type:"success",message:"Server deleted successfully"})}catch{r({type:"error",message:"Failed to delete server"})}};return A?e.jsx(n,{sx:{p:3,textAlign:"center"},children:e.jsx(a,{children:"Loading MCP servers..."})}):e.jsxs(n,{sx:{p:3},children:[e.jsx(L,{items:w}),e.jsxs(n,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mt:2,mb:4},children:[e.jsxs(n,{children:[e.jsx(a,{variant:"h4",gutterBottom:!0,children:"MCP Servers"}),e.jsx(a,{variant:"body1",color:"text.secondary",children:"Manage Model Context Protocol servers and their tools"})]}),e.jsx(g,{variant:"contained",startIcon:e.jsx(O,{}),onClick:M,children:"Add Server"})]}),x&&e.jsx(B,{status:x.type==="success"?"success":"error",message:x.message,onClose:()=>r(null)}),e.jsx(S,{container:!0,spacing:3,children:b.map(t=>e.jsx(S,{item:!0,xs:12,md:6,lg:4,children:e.jsxs(G,{sx:{height:"100%",display:"flex",flexDirection:"column"},children:[e.jsxs(R,{sx:{flexGrow:1},children:[e.jsxs(n,{sx:{display:"flex",justifyContent:"space-between",alignItems:"flex-start",mb:2},children:[e.jsx(a,{variant:"h6",component:"h2",children:t.name}),e.jsx(z,{label:t.status,color:E(t.status),size:"small"})]}),e.jsx(a,{variant:"body2",color:"text.secondary",paragraph:!0,children:t.description}),e.jsxs(a,{variant:"body2",sx:{mb:1},children:[e.jsx("strong",{children:"URL:"})," ",t.url]}),e.jsxs(a,{variant:"body2",sx:{mb:1},children:[e.jsx("strong",{children:"Tools:"})," ",t.toolCount]}),t.lastConnected&&e.jsxs(a,{variant:"body2",color:"text.secondary",children:["Last connected: ",new Date(t.lastConnected).toLocaleString()]})]}),e.jsxs(U,{sx:{justifyContent:"space-between"},children:[e.jsx(n,{children:t.status==="running"?e.jsx(m,{onClick:()=>C(t.id,"stop"),color:"error",title:"Stop Server",children:e.jsx(Q,{})}):e.jsx(m,{onClick:()=>C(t.id,"start"),color:"success",title:"Start Server",children:e.jsx($,{})})}),e.jsxs(n,{children:[e.jsx(m,{onClick:()=>k(t),title:"Edit Server",children:e.jsx(K,{})}),e.jsx(m,{onClick:()=>F(t.id),color:"error",title:"Delete Server",children:e.jsx(N,{})})]})]})]})},t.id))}),e.jsxs(W,{open:I,onClose:()=>d(!1),maxWidth:"sm",fullWidth:!0,children:[e.jsx(Z,{children:p?"Edit MCP Server":"Add MCP Server"}),e.jsx(q,{children:e.jsxs(n,{sx:{display:"flex",flexDirection:"column",gap:2,mt:1},children:[e.jsx(j,{label:"Server Name",value:o?.name||"",onChange:t=>c(s=>s?{...s,name:t.target.value}:null),fullWidth:!0,required:!0}),e.jsx(j,{label:"Server URL",value:o?.url||"",onChange:t=>c(s=>s?{...s,url:t.target.value}:null),fullWidth:!0,required:!0,placeholder:"mcp://server-host:port"}),e.jsx(j,{label:"Description",value:o?.description||"",onChange:t=>c(s=>s?{...s,description:t.target.value}:null),fullWidth:!0,multiline:!0,rows:3})]})}),e.jsxs(H,{children:[e.jsx(g,{onClick:()=>d(!1),children:"Cancel"}),e.jsxs(g,{onClick:P,variant:"contained",children:[p?"Update":"Add"," Server"]})]})]})]})};export{ce as default};
